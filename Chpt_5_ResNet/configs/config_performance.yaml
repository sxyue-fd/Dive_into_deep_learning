# ResNet18 CIFAR-10 性能调优配置文件
# =============================================================================
# 🚀 性能调优中心 - 选择训练场景
# =============================================================================

# 🎯 训练场景选择 (修改此处切换不同的性能预设)
performance_preset: "quick_test"  # 可选: "quick_test", "baseline", "high_precision"

# =============================================================================
# 🎛️ 性能调优预设配置
# =============================================================================
performance_presets:
  # 场景1: 快速测试 - 用于快速验证代码和模型结构
  quick_test:
    description: "快速测试 - 验证代码和基本功能"
    epochs: 3
    batch_size: 256
    learning_rate: 0.01
    weight_decay: 1e-4
    target_accuracy: 0.70
    early_stopping_patience: 3
    scheduler: "step"
    optimizer: "adam"
    mixed_precision: true
    num_workers: 0
    log_frequency: 20
    save_frequency: 2
    
  # 场景2: 基准验证 - 标准性能基准测试
  baseline:
    description: "基准验证 - 标准性能和复现性验证"
    epochs: 20
    batch_size: 512
    learning_rate: 0.001
    weight_decay: 1e-4
    target_accuracy: 0.85
    early_stopping_patience: 10
    scheduler: "cosine"
    optimizer: "adam"
    mixed_precision: true
    num_workers: 4
    log_frequency: 20
    save_frequency: 5
    
  # 场景3: 高精度训练 - 追求最佳性能
  high_precision:
    description: "高精度训练 - 追求最佳准确率"
    epochs: 100
    batch_size: 256
    learning_rate: 0.0005
    weight_decay: 5e-5
    target_accuracy: 0.93
    early_stopping_patience: 20
    scheduler: "cosine"
    optimizer: "adam"
    mixed_precision: true
    num_workers: 4
    log_frequency: 50
    save_frequency: 10

# =============================================================================
# 🔧 手动调优参数 (可覆盖预设值)
# =============================================================================
# 取消注释下面的参数可覆盖预设配置中的对应值
manual_overrides:
  # epochs: 50                    # 覆盖训练轮数
  # learning_rate: 0.002          # 覆盖学习率
  # batch_size: 128               # 覆盖批次大小
  # optimizer: "sgd"              # 覆盖优化器
  # scheduler: "step"             # 覆盖调度器

# =============================================================================
# 📊 高级性能参数
# =============================================================================
advanced_performance:
  # 数据增强强度
  augmentation_strength: "medium"  # "light", "medium", "strong"
  augmentation_configs:
    light:
      random_horizontal_flip: 0.3
      random_crop_padding: 2
    medium:
      random_horizontal_flip: 0.5
      random_crop_padding: 4
    strong:
      random_horizontal_flip: 0.7
      random_crop_padding: 6
  
  # 优化器参数
  optimizer_configs:
    adam:
      betas: [0.9, 0.999]
      eps: 1e-8
    sgd:
      momentum: 0.9
      nesterov: true
  
  # 调度器参数
  scheduler_configs:
    cosine:
      T_max: 100
      eta_min: 1e-6
    step:
      step_size: 30
      gamma: 0.1

# =============================================================================
# 🏗️ 基础配置 (通常不需要修改)
# =============================================================================

# 运行模式
run_mode:
  mode: "train"
  model_path: "outputs/models/best.pth"
  resume_path: null

# 数据配置
data:
  dataset: "cifar10"
  data_root: "./data/raw"
  validation_split: 0.2
  shuffle: true
  pin_memory: true
  transforms:
    train:
      random_horizontal_flip: 0.5
      random_crop:
        size: 32
        padding: 4
    normalize:
      mean: [0.485, 0.456, 0.406]
      std: [0.229, 0.224, 0.225]

# 模型配置
model:
  name: "resnet18"
  num_classes: 10
  input_channels: 3
  resnet:
    block_type: "basic"
    layers: [2, 2, 2, 2]
    initial_channels: 64
    use_pretrained: false

# 训练监控
training_monitoring:
  early_stopping:
    min_delta: 0.001
    monitor: "val_loss"
    mode: "min"
  convergence:
    patience: 10
    threshold: 1e-5
  overfitting:
    patience: 5
    train_val_gap_threshold: 0.1

# 保存设置
checkpoint:
  save_best: true
  save_last: true
  monitor: "val_accuracy"
  mode: "max"

# 日志设置
logging:
  level: "INFO"

# 设备设置
device:
  use_cuda: true

# 输出路径
paths:
  logs: "outputs/logs"
  models: "outputs/models"
  visualizations: "outputs/visualizations"

# 随机种子
random_seed: 42

# 可视化设置
visualization: {}

# =============================================================================
# 📝 使用说明
# =============================================================================
# 
# 🚀 快速开始:
# 1. 修改 performance_preset 选择训练场景
# 2. 运行训练: python src/main.py
# 
# 🎛️ 自定义调优:
# 1. 在 manual_overrides 中取消注释并修改需要的参数
# 2. 调整 advanced_performance 中的高级参数
# 
# 📊 场景说明:
# - quick_test: 5轮快速验证，适合调试代码
# - baseline: 20轮标准训练，适合性能基准
# - high_precision: 100轮精细训练，追求最佳效果
# 
# ⚠️ 注意事项:
# - manual_overrides 中的参数会覆盖预设值
# - 修改 advanced_performance 会影响所有预设
# - 建议先用 quick_test 验证，再用其他预设训练
# 
# =============================================================================
